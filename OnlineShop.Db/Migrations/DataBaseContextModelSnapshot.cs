// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineShop.Db;

namespace OnlineShop.Db.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OnlineShop.Db.Model.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("OnlineShop.Db.Model.CartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid?>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("OnlineShop.Db.Model.FavouriteProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("FavouriteProducts");
                });

            modelBuilder.Entity("OnlineShop.Db.Model.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserDeliveryInfoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("UserDeliveryInfoId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OnlineShop.Db.Model.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Material")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c8d9fe44-6197-4bbb-9db3-b9b5b7acf5e4"),
                            Cost = 0m,
                            ImagePath = "/images/product1.png"
                        },
                        new
                        {
                            Id = new Guid("3b03a6fc-7633-44f8-bc93-dc61d60aadc0"),
                            Cost = 0m,
                            ImagePath = "/images/product2.png"
                        },
                        new
                        {
                            Id = new Guid("50722c67-8c9e-4987-bf8f-f9438fa60f2b"),
                            Cost = 0m,
                            ImagePath = "/images/product3.png"
                        },
                        new
                        {
                            Id = new Guid("66084cb3-eee1-4efe-a11d-e41c2228f9f3"),
                            Cost = 0m,
                            ImagePath = "/images/product4.png"
                        },
                        new
                        {
                            Id = new Guid("50f8741a-afdd-43de-a55d-b2d767f7e57f"),
                            Cost = 0m,
                            ImagePath = "/images/product5.png"
                        },
                        new
                        {
                            Id = new Guid("14dd502f-a52a-4170-8888-14ff363d8a35"),
                            Cost = 0m,
                            ImagePath = "/images/product6.png"
                        },
                        new
                        {
                            Id = new Guid("a002ea0a-adca-4a11-b6fc-ab409ee92440"),
                            Cost = 0m,
                            ImagePath = "/images/product7.png"
                        },
                        new
                        {
                            Id = new Guid("2f554b37-0a2b-402a-addd-5eeb7cb5278e"),
                            Cost = 0m,
                            ImagePath = "/images/product8.png"
                        },
                        new
                        {
                            Id = new Guid("6820e8a1-8457-4a6d-8632-e933af91475b"),
                            Cost = 0m,
                            ImagePath = "/images/product9.png"
                        },
                        new
                        {
                            Id = new Guid("f63f23d1-ac88-415c-8a57-03270b553987"),
                            Cost = 0m,
                            ImagePath = "/images/product10.png"
                        },
                        new
                        {
                            Id = new Guid("32072d0a-54f0-485d-8c3b-4ff195b3d01b"),
                            Cost = 0m,
                            ImagePath = "/images/product11.png"
                        },
                        new
                        {
                            Id = new Guid("61a27bea-256d-4d37-819e-46a0e11cedc6"),
                            Cost = 0m,
                            ImagePath = "/images/product12.png"
                        });
                });

            modelBuilder.Entity("OnlineShop.Db.Model.UserDeliveryInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressOptional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RememberAddress")
                        .HasColumnType("bit");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserDeliveryInfo");
                });

            modelBuilder.Entity("OnlineShop.Db.Model.CartItem", b =>
                {
                    b.HasOne("OnlineShop.Db.Model.Cart", null)
                        .WithMany("Items")
                        .HasForeignKey("CartId");

                    b.HasOne("OnlineShop.Db.Model.Order", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderId");

                    b.HasOne("OnlineShop.Db.Model.Product", "Product")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OnlineShop.Db.Model.FavouriteProduct", b =>
                {
                    b.HasOne("OnlineShop.Db.Model.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OnlineShop.Db.Model.Order", b =>
                {
                    b.HasOne("OnlineShop.Db.Model.Cart", null)
                        .WithMany("Orders")
                        .HasForeignKey("CartId");

                    b.HasOne("OnlineShop.Db.Model.UserDeliveryInfo", "UserDeliveryInfo")
                        .WithMany()
                        .HasForeignKey("UserDeliveryInfoId");

                    b.Navigation("UserDeliveryInfo");
                });

            modelBuilder.Entity("OnlineShop.Db.Model.Cart", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("OnlineShop.Db.Model.Order", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("OnlineShop.Db.Model.Product", b =>
                {
                    b.Navigation("CartItems");
                });
#pragma warning restore 612, 618
        }
    }
}
